// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AnnouncementVendor {
  announcementVendorId String       @id @default(uuid())
  vendorId             String
  vendor               Vendor       @relation(fields: [vendorId], references: [vendorId])
  announcementId       String
  announcement         Announcement @relation(fields: [announcementId], references: [announcementId])
}

model AnnouncementCustomer {
  announcementCustomerId String       @id @default(uuid())
  customerId             String
  customer               Customer     @relation(fields: [customerId], references: [customerId])
  announcementId         String
  announcement           Announcement @relation(fields: [announcementId], references: [announcementId])
}

model Announcement {
  announcementId       String                 @id @default(uuid())
  title                String
  content              String
  type                 String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  announcementVendor   AnnouncementVendor[]
  announcementCustomer AnnouncementCustomer[]
}

model AdminRole {
  adminRoleId String  @id @default(uuid())
  name        String  @unique
  admin       Admin[]
}

model Admin {
  adminId     String     @id @default(uuid())
  name        String
  email       String     @unique
  password    String
  adminRoleId String
  isActive    Boolean    @default(true)
  adminRole   AdminRole  @relation(fields: [adminRoleId], references: [adminRoleId])
  delivery    Delivery[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Variant {
  variantId      String           @id @default(uuid())
  name           String           @unique
  color          String           @unique
  productVariant ProductVariant[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model ProductVariant {
  productVariantId           String                       @id @default(uuid())
  variantId                  String
  productId                  String
  stock                      Int                          @default(0)
  variant                    Variant                      @relation(fields: [variantId], references: [variantId])
  product                    Product                      @relation(fields: [productId], references: [productId])
  purchaseProduct            PurchaseProduct[]
  wishListProduct            WishListProduct[]
  cartProduct                CartProduct[]
  customerOrderVendorProduct CustomerOrderVendorProduct[]
}

model Delivery {
  deliveryId     String          @id @default(uuid())
  deliveryCode   String
  deliveryStatus String          @default("PENDING")
  deliveryName   String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  completeAt     DateTime
  adminId        String
  admin          Admin           @relation(fields: [adminId], references: [adminId])
  deliveryOrder  DeliveryOrder[]
}

model Category {
  categoryId String    @id @default(uuid())
  name       String    @unique
  product    Product[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model ProductImage {
  productImageId String   @id @default(uuid())
  image          String
  productId      String
  product        Product  @relation(fields: [productId], references: [productId])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model VendorUser {
  vendorUserId     String           @id @default(uuid())
  name             String
  email            String           @unique
  password         String
  vendorUserRoleId String
  vendorId         String
  isActive         Boolean          @default(true)
  vendorUserRole   VendorUserRole   @relation(fields: [vendorUserRoleId], references: [vendorUserRoleId])
  vendor           Vendor           @relation(fields: [vendorId], references: [vendorId])
  vendorPurchase   VendorPurchase[]
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model Vendor {
  vendorId            String                @id @default(uuid())
  name                String
  image               String
  email               String
  isActive            Boolean               @default(false)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  product             Product[]
  customerOrderVendor CustomerOrderVendor[]
  announcementVendor  AnnouncementVendor[]
  vendorUser          VendorUser[]
}

model Customer {
  customerId           String                 @id @default(uuid())
  name                 String
  email                String                 @unique
  password             String
  image                String?
  phone                String?
  address              String?
  announcementCustomer AnnouncementCustomer[]
  wishListProduct      WishListProduct[]
  cartProduct          CartProduct[]
  customerOrder        CustomerOrder[]
  customerOrderVendor  CustomerOrderVendor[]
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
}

model PurchaseProduct {
  purchaseProductId String         @id @default(uuid())
  purchasePrice     Float
  quantity          Int
  productVariantId  String
  productId         String
  productVariant    ProductVariant @relation(fields: [productVariantId], references: [productVariantId])
  product           Product        @relation(fields: [productId], references: [productId])
  vendorPurchaseId  String
  vendorPurchase    VendorPurchase @relation(fields: [vendorPurchaseId], references: [vendorPurchaseId])
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model VendorUserRole {
  vendorUserRoleId String       @id @default(uuid())
  name             String       @unique
  vendorUser       VendorUser[]
}

model WishListProduct {
  wishListProductId String         @id @default(uuid())
  productId         String
  productVariantId  String
  customerId        String
  product           Product        @relation(fields: [productId], references: [productId])
  productVariant    ProductVariant @relation(fields: [productVariantId], references: [productVariantId])
  customer          Customer       @relation(fields: [customerId], references: [customerId])
}

model VendorPurchase {
  vendorPurchaseId String            @id @default(uuid())
  purchaseCode     String
  purchaseAt       DateTime          @default(now())
  vendorUserId     String
  vendorUser       VendorUser        @relation(fields: [vendorUserId], references: [vendorUserId])
  purchaseProduct  PurchaseProduct[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model CartProduct {
  cartProductId    String         @id @default(uuid())
  quantity         Int
  productId        String
  productVariantId String
  customerId       String
  product          Product        @relation(fields: [productId], references: [productId])
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [productVariantId])
  customer         Customer       @relation(fields: [customerId], references: [customerId])
}

model CustomerOrder {
  customerOrderId     String                @id @default(uuid())
  orderCode           String
  orderStatus         String                @default("PENDING")
  totalPrice          Float
  deliveryPrice       Float
  deliveryAddress     String
  deliveryMethod      String
  customerId          String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  customer            Customer              @relation(fields: [customerId], references: [customerId])
  customerOrderVendor CustomerOrderVendor[]
}

model DeliveryOrder {
  deliveryOrderId       String              @id @default(uuid())
  deliveryOrderStatus   String              @default("PENDING")
  deliveryName          String
  startAt               DateTime
  endAt                 DateTime
  deliveryId            String
  customerOrderVendorId String
  delivery              Delivery            @relation(fields: [deliveryId], references: [deliveryId])
  customerOrderVendor   CustomerOrderVendor @relation(fields: [customerOrderVendorId], references: [customerOrderVendorId])
}

model CustomerOrderVendor {
  customerOrderVendorId      String                       @id @default(uuid())
  vendorName                 String
  vendorId                   String
  customerOrderVendorStatus  String                       @default("PENDING")
  deliveryAddress            String
  customerOrderId            String
  customerId                 String
  vendor                     Vendor                       @relation(fields: [vendorId], references: [vendorId])
  customerOrder              CustomerOrder                @relation(fields: [customerOrderId], references: [customerOrderId])
  customer                   Customer                     @relation(fields: [customerId], references: [customerId])
  deliveryOrder              DeliveryOrder[]
  customerOrderVendorProduct CustomerOrderVendorProduct[]
}

model CustomerOrderVendorProduct {
  customerOrderVendorProductId String              @id @default(uuid())
  productName                  String
  variantName                  String
  vendorName                   String
  quantity                     Int
  price                        Float
  orderVendorProductStatus     String              @default("PENDING")
  productId                    String
  productVariantId             String
  customerOrderVendorId        String
  product                      Product             @relation(fields: [productId], references: [productId])
  productVariant               ProductVariant      @relation(fields: [productVariantId], references: [productVariantId])
  customerOrderVendor          CustomerOrderVendor @relation(fields: [customerOrderVendorId], references: [customerOrderVendorId])
}

model Product {
  productId                  String                       @id @default(uuid())
  name                       String
  description                String
  primaryImage               String
  weight                     Float
  price                      Float
  promotion                  Boolean                      @default(false)
  promotionPrice             Float?
  isActive                   Boolean                      @default(true)
  vendorId                   String
  categoryId                 String
  vendor                     Vendor                       @relation(fields: [vendorId], references: [vendorId])
  category                   Category                     @relation(fields: [categoryId], references: [categoryId])
  productImage               ProductImage[]
  productVariant             ProductVariant[]
  purchaseProduct            PurchaseProduct[]
  wishListProduct            WishListProduct[]
  cartProduct                CartProduct[]
  customerOrderVendorProduct CustomerOrderVendorProduct[]
  createdAt                  DateTime                     @default(now())
  updatedAt                  DateTime                     @updatedAt
}
